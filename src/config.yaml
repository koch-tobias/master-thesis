##########################################
##           LABELING SETTINGS          ##
##########################################
labels:
  binary_column: Relevant fuer Messung   # Column name with the binary classes [default = Relevant fuer Messung]
  binary_label_1: Nein                     # Label which will be converted to 1 [default = Ja]
  binary_label_0: Ja                      # Label which will be converted to 0 [default = Nein]
  multiclass_column: Einheitsname        # Column name with the multi classes [default = Einheitsname]
keep_modules:                            # This modules are used, all other modules will be not considered
  - FBEP
  - FBEK
  - FBEI
  - CE05
  - CD07
  - CD03
  - CD01
relevant_features:                       # List of all relevant features from the raw data which will be kept in the labeled data                   
  - Sachnummer
  - Benennung (dt)
  - Zeichnungsindex
  - Doku-Teil
  - Alternative
  - Dok-Format
  - X-Min
  - X-Max
  - Y-Min
  - Y-Max
  - Z-Min
  - Z-Max
  - ox
  - oy
  - oz
  - xx
  - xy
  - xz
  - yx
  - yy
  - yz
  - zx
  - zy
  - zz
  - Wert
  - Einheit
  - Gewichtsart
  - L-Kz.
  - Kurzname
  - L/R-Kz.
  - Modul (Nr)
  - Code

##########################################
##      DATA AUGMENTATION SETTINGS      ##
##########################################
gpt_settings:                     
  temperature: 0.6                        # [default = 0.6]
  api_version: 2023-03-15-preview         # [default = 2023-03-15-preview]
  api_key: 9e6fa24631f54cf58866766bd31a2bff  

##########################################
##    SETTINGS FOR DATASET GENERATION   ##
##########################################
dataset_params:
  seed: 42
  cut_percent_of_front: 0.18               # All car parts which are in the X percent of the front of the car will be deleted (no relevant car parts in the front of the car)
  car_part_designation: Benennung (dt)     # Column of the designation (text) which will be used for training
  use_only_text: False                     # True = Generate the dataset with only car part designation as feature
  normalize_numerical_features: False      # If true, numerical features will be normalized 
  bounding_box_features_original:          # List of all features which represent the bounding boxes
    - X-Min
    - X-Max
    - Y-Min
    - Y-Max
    - Z-Min
    - Z-Max
    - ox
    - oy
    - oz
    - xx
    - xy
    - xz
    - yx
    - yy
    - yz
    - zx
    - zy
    - zz
    - Wert
  features_for_model:                       # List of all features (except of the designation column) which are used to train the model               
    - center_x
    - center_y
    - center_z
    - theta_x
    - theta_y
    - theta_z
    - volume
    - Wert
    - length
    - width
    - height
  train_val_split: 0.3                  # The dataset will be split into (1-X)*100 percent train set and x*100 percent validation set -> [default = 0.3]
  val_test_split: 0.5                     # The validation set will be split into (1-X)*100 percent validation set and x*100 percent test set -> [default = 0.5]

##########################################
##      CLASSIFICATION SETTINGS         ##
##########################################

prediction_settings:
  prediction_threshold: 0.6              # The probality of the prediction must be higer than X*100 percent that a car part will be classified as relevant (1=relevant, 0=not relevant)

##########################################
##             TEST SETTINGS            ##
##########################################
test_file_path: data/raw_for_labeling/G60_prismaexport-20230731-163448.xls  # Path to a file which should be used to test the API

##########################################
##        GENERAL TRAIN SETTINGS        ##
##########################################

train_settings:
  folder_processed_dataset: data/processed/20231114_1521/    # Path to the proprocessed data folder which will be used to train the model
  model_folder_dir: src/training_pipeline/trained_models
  train_binary_model: True                # True = Training a binary model
  train_multiclass_model: True             # True = Training a multiclass model
  ml-method: xgboost                       # Choose lgbm, catboost, or xgboost
  k-folds: 4                               # Number of folds used for cross validation -> [default = 4]
  early_stopping: 25                       # Patience which is used for early stopping -> [default = 50]
  top_x_models_for_cv: 0.05               # X*100 percent of the trained models with grid search hyperparameter tuning will be used for validation with k-fold crossvalidation [default = 10]
  n_estimators: 10000                      # Number of iteration the model will be trained [default = 10000]

##########################################
##          LGBM TRAIN SETTINGS         ##
##########################################

lgbm_params_binary:
  boosting_type: goss                      # I tried gbdt and dart -> gbdt performed better due to slight overfitting in dart -> default = gbdt
  loss: binary_logloss                       # I have tested binary_logloss, cross_entropy_lambda, cross_entropy. No significant difference -> default = binary_logloss

lgbm_params_multiclass:
  boosting_type: goss
  loss: multi_logloss
  #metric: auc_mu

lgbm_hyperparameter:                      # Hyperparameters used for grid search hyperparameter tuning
  lr:                                     # For better accuracy
    - 0.2
    - 0.1
    - 0.05
  max_depth:                              # For speed lower = faster and overfitting
    - 12
    - 9
    - 6
  colsample_bytree:                       # For speed lower = faster and overfitting (feature fraction)
    - 1
    - 0.7
    - 0.5
  lambda_l2:
    - 0.2
    - 0.1
    - 0.05


##########################################
##       XGBoost TRAIN SETTINGS         ##
##########################################

xgb_params_binary:
  boosting_type: gbtree
  loss: logloss

xgb_params_multiclass:
  boosting_type: gbtree
  loss: mlogloss

xgb_hyperparameter:                       # Hyperparameters used for grid search hyperparameter tuning
  lr:                                     # For better accuracy
    - 0.2
    - 0.1
    - 0.05
  max_depth:                              # For speed lower = faster and overfitting
    - 3
    - 6
    - 9
  colsample_bytree:                       # For speed lower = faster and overfitting (feature fraction)
    - 0.5
    - 0.7
    - 1
  lambda:                       
    - 0.2
    - 0.1
    - 0.05

##########################################
##       CatBoost TRAIN SETTINGS        ##
##########################################

cb_params_binary:                 
  boosting_type: Plain
  loss: Logloss

cb_params_multiclass:
  boosting_type: Plain
  loss: MultiClass

cb_hyperparameter:                          # Hyperparameters used for grid search hyperparameter tuning
  lr:                                     # For better accuracy
    - 0.3
    - 0.2
    - 0.1
  depth:                              # For speed lower = faster and overfitting
    - 3
    - 6
    - 9
  l2_regularization:
    - 0.2
    - 0.1
    - 0.05
  bagging_temperature:
    - 0.5
    - 1
    - 1.5